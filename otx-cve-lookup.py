#!/usr/bin/env python3
import argparse
import re
import os.path
from OTXv2 import OTXv2
from OTXv2 import IndicatorTypes


# Add your AlienVault OTX API key below
API_KEY = ''
# 
OTX_SERVER = 'https://otx.alienvault.com/'
otx = OTXv2(API_KEY, server=OTX_SERVER)

parser = argparse.ArgumentParser(description='OTX CVE in wild lookup')
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('-c', '--cve', help='CVE eg; CVE-2020-14882')
group.add_argument('--cvelist', help='Comma-separated list of CVEs eg; CVE-2017-8977,CVE-2017-11882')
group.add_argument('--cvefile', help='New-Line-separated file of CVEs eg; ./cve-list.txt')
group.add_argument('--readfile', help='Regex search plain text file for CVEs eg; ./vulnreport.csv')
parser.add_argument('--csvout', help='Output results in CSV format', action='store_true')

args = vars(parser.parse_args())

if args["cve"]:
    cves = [args["cve"]]
elif args["cvelist"]:
    cves = args["cvelist"].split(",")
elif args["cvefile"]:
    if os.path.isfile(args["cvefile"]):
        cvefile = args["cvefile"]
        with open(cvefile) as f:
            cves = f.read().splitlines()
elif args["readfile"]:
    cvefile = args["readfile"]
    cves = []
    pattern = re.compile("CVE-\d{4}-\d{4,7}")
    for line in open(cvefile):
        for match in re.finditer(pattern, line):
            cves.append(match.group())

# CVE-\d{4}-\d{4,7}

if args["csvout"]:
    print('cve,exploited in wild,exploit exists')
    for cve in cves:
        indicator_details = otx.get_indicator_details_full(IndicatorTypes.CVE, cve)
        if "seen_wild" in indicator_details["general"].keys():
            if indicator_details["general"]["seen_wild"]:
                in_wild = True
            else:
                in_wild = False
        else:
            in_wild = False
        if "exploits" in indicator_details["general"].keys():
            if indicator_details["general"]["exploits"]:
                exploits = True
            else:
                exploits = False
        else:
            exploits = False
        print(f"{cve},{in_wild},{exploits}")
else:
    print(f"Looking up following CVEs:")
    for cve in cves:
        print(f"\t{cve}")

    for cve in cves:
        print(f"[+] {cve}:")
        indicator_details = otx.get_indicator_details_full(IndicatorTypes.CVE, cve)

        if "seen_wild" in indicator_details["general"].keys():
            if indicator_details["general"]["seen_wild"]:
                print(f"[!]   ALIENVAULT HAS SEEN THIS ({cve}) ACTIVELY EXPLOITED IN THE WILD")
            else:
                print(f"[+]   Alienvault has NOT seen this ({cve}) actively exploited in the wild")
        else:
            print(f"[+]   Alienvault has NOT seen this ({cve}) actively exploited in the wild")
        if "exploits" in indicator_details["general"].keys():
            if indicator_details["general"]["exploits"]:
                print(f"[!]   ALIENVAULT HAS SEEN EXPLOITS FOR THIS ({cve})")
            else:
                print(f"[+]   Alienvault has NOT seen exploits for this ({cve})")
        else:
            print(f"[+]   Alienvault has NOT seen exploits for this ({cve})")
